{"version":3,"sources":["components/BasicForm.js","App.js","index.js"],"names":["regEx","RegExp","emailRegEx","formReducer","state","action","type","name","value","isNameValid","lastName","isLastNameValid","email","isEmailValid","isValid","isTouched","BasicForm","props","useReducer","dispatch","console","log","emailClasses","nameClasses","lastNameClasses","className","htmlFor","onChange","event","target","test","trim","id","match","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"uNAEIA,EAAQ,IAAIC,OAAO,2BACnBC,EAAa,IAAID,OACnB,6JAGIE,EAAc,SAACC,EAAOC,GAE1B,MAAoB,SAAhBA,EAAOC,KACF,2BACFF,GADL,IAEEG,KAAMF,EAAOG,MACbC,aAAa,IAGG,cAAhBJ,EAAOC,KACF,2BACFF,GADL,IAEEM,SAAUL,EAAOG,MACjBG,iBAAiB,IAGD,UAAhBN,EAAOC,KACF,2BACFF,GADL,IAEEQ,MAAOP,EAAOG,MACdK,cAAc,IAGE,aAAhBR,EAAOC,KACF,2BACFF,GADL,IAEEK,YAAgC,SAAnBJ,EAAOS,SAA6BV,EAAMK,YACvDE,gBACqB,cAAnBN,EAAOS,SAAkCV,EAAMO,gBACjDE,aAAiC,UAAnBR,EAAOS,SAA8BV,EAAMS,aACzDE,WAAW,IAGK,eAAhBV,EAAOC,KACF,2BACFF,GADL,IAEEW,WAAW,IAGRX,CACR,EAmFcY,EAjFG,SAACC,GACjB,MAA0BC,qBAAWf,EAAa,CAChDI,KAAM,GACNE,aAAa,EACbC,SAAU,GACVC,iBAAiB,EACjBC,MAAO,GACPC,cAAc,EACdE,WAAW,IAPb,mBAAOX,EAAP,KAAce,EAAd,KAkCAC,QAAQC,IAAIjB,EAAMK,YAAY,QAC9BW,QAAQC,IAAIjB,EAAMO,gBAAgB,YAClCS,QAAQC,IAAIjB,EAAMS,aAAa,SAE/B,IAAMS,EAAelB,EAAMS,aACvB,eACA,uBACEU,EAAcnB,EAAMK,YACtB,eACA,uBACEe,EAAkBpB,EAAMO,gBAC1B,eACA,uBAEJ,OACE,iCACE,sBAAKc,UAAU,gBAAf,UACE,sBAAKA,UAAWF,EAAhB,UACE,uBAAOG,QAAQ,OAAf,wBACA,uBAAOC,SA3CW,SAACC,GACzBT,EAAS,CAAEb,KAAM,OAAQE,MAAOoB,EAAMC,OAAOrB,QACxCR,EAAM8B,KAAKF,EAAMC,OAAOrB,MAAMuB,SACjCZ,EAAS,CAAEb,KAAM,WAAYQ,QAAS,QAEzC,EAsC2CR,KAAK,OAAO0B,GAAG,UACjD5B,EAAMK,aACN,mBAAGgB,UAAU,aAAb,wCAGJ,sBAAKA,UAAWD,EAAhB,UACE,uBAAOE,QAAQ,OAAf,uBACA,uBAAOC,SA3Ce,SAACC,GAC7BT,EAAS,CAAEb,KAAM,YAAaE,MAAOoB,EAAMC,OAAOrB,QAC7CR,EAAM8B,KAAKF,EAAMC,OAAOrB,MAAMuB,SACjCZ,EAAS,CAAEb,KAAM,WAAYQ,QAAS,aAEzC,EAsC+CR,KAAK,OAAO0B,GAAG,UACrD5B,EAAMO,iBACN,mBAAGc,UAAU,aAAb,gDAIN,sBAAKA,UAAWH,EAAhB,UACE,uBAAOI,QAAQ,OAAf,4BACA,uBAAOC,SA5Cc,SAACC,GAC1BT,EAAS,CAAEb,KAAM,QAASE,MAAOoB,EAAMC,OAAOrB,QACzCoB,EAAMC,OAAOrB,MAAMuB,OAAOE,MAAM/B,IACnCiB,EAAS,CAAEb,KAAM,WAAYQ,QAAS,UAEpCV,EAAMS,cAAgBT,EAAMK,aAAeL,EAAMO,iBACnDQ,EAAS,CAAEb,KAAM,cAEpB,EAoC0CA,KAAK,OAAO0B,GAAG,UAClD5B,EAAMS,cACN,mBAAGY,UAAU,aAAb,kDAGJ,qBAAKA,UAAU,eAAf,SACE,wBAAQS,UAAW9B,EAAMW,UAAzB,wBAIP,ECtHcoB,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,KAGL,ECHDW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.2f1aa329.chunk.js","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nlet regEx = new RegExp(\"[A-Z]+([ '-][a-zA-Z]+)*\");\r\nlet emailRegEx = new RegExp(\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n);\r\n\r\nconst formReducer = (state, action) => {\r\n  // console.log(action);\r\n  if (action.type === \"NAME\") {\r\n    return {\r\n      ...state,\r\n      name: action.value,\r\n      isNameValid: true,\r\n    };\r\n  }\r\n  if (action.type === \"LAST_NAME\") {\r\n    return {\r\n      ...state,\r\n      lastName: action.value,\r\n      isLastNameValid: true,\r\n    };\r\n  }\r\n  if (action.type === \"EMAIL\") {\r\n    return {\r\n      ...state,\r\n      email: action.value,\r\n      isEmailValid: true,\r\n    };\r\n  }\r\n  if (action.type === \"NO_VALID\") {\r\n    return {\r\n      ...state,\r\n      isNameValid: action.isValid === \"NAME\" ? false : state.isNameValid,\r\n      isLastNameValid:\r\n        action.isValid === \"LAST_NAME\" ? false : state.isLastNameValid,\r\n      isEmailValid: action.isValid === \"EMAIL\" ? false : state.isEmailValid,\r\n      isTouched: false,\r\n    };\r\n  }\r\n  if (action.type === \"IS_TOUCHED\") {\r\n    return {\r\n      ...state,\r\n      isTouched: true,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst BasicForm = (props) => {\r\n  const [state, dispatch] = useReducer(formReducer, {\r\n    name: \"\",\r\n    isNameValid: true,\r\n    lastName: \"\",\r\n    isLastNameValid: true,\r\n    email: \"\",\r\n    isEmailValid: false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const nameChangeHandler = (event) => {\r\n    dispatch({ type: \"NAME\", value: event.target.value });\r\n    if (!regEx.test(event.target.value.trim())) {\r\n      dispatch({ type: \"NO_VALID\", isValid: \"NAME\" });\r\n    }\r\n  };\r\n\r\n  const lastNameChangeHandler = (event) => {\r\n    dispatch({ type: \"LAST_NAME\", value: event.target.value });\r\n    if (!regEx.test(event.target.value.trim())) {\r\n      dispatch({ type: \"NO_VALID\", isValid: \"LAST_NAME\" });\r\n    }\r\n  };\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatch({ type: \"EMAIL\", value: event.target.value });\r\n    if (!event.target.value.trim().match(emailRegEx)) {\r\n      dispatch({ type: \"NO_VALID\", isValid: \"EMAIL\" });\r\n    }\r\n    if (state.isEmailValid && state.isNameValid && state.isLastNameValid) {\r\n      dispatch({ type: \"IS_TOUCHED\" });\r\n    }\r\n  };\r\n\r\n  console.log(state.isNameValid,'name');\r\n  console.log(state.isLastNameValid,'lastName')\r\n  console.log(state.isEmailValid,'email');\r\n\r\n  const emailClasses = state.isEmailValid\r\n    ? \"form-control\"\r\n    : \"form-control invalid\";\r\n  const nameClasses = state.isNameValid\r\n    ? \"form-control\"\r\n    : \"form-control invalid\";\r\n  const lastNameClasses = state.isLastNameValid\r\n    ? \"form-control\"\r\n    : \"form-control invalid\";\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"control-group\">\r\n        <div className={nameClasses}>\r\n          <label htmlFor=\"name\">First Name</label>\r\n          <input onChange={nameChangeHandler} type=\"text\" id=\"name\" />\r\n          {!state.isNameValid && (\r\n            <p className=\"error-text\">Your name is incorrect.</p>\r\n          )}\r\n        </div>\r\n        <div className={lastNameClasses}>\r\n          <label htmlFor=\"name\">Last Name</label>\r\n          <input onChange={lastNameChangeHandler} type=\"text\" id=\"name\" />\r\n          {!state.isLastNameValid && (\r\n            <p className=\"error-text\">Your Last Name is incorrect.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={emailClasses}>\r\n        <label htmlFor=\"name\">E-Mail Address</label>\r\n        <input onChange={emailChangeHandler} type=\"text\" id=\"name\" />\r\n        {!state.isEmailValid && (\r\n          <p className=\"error-text\">Your email is incorrect or empty.</p>\r\n        )}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button disabled={!state.isTouched}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BasicForm;\r\n","import BasicForm from './components/BasicForm';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <BasicForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}